#
#  Makefile for dram
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -c D:\OMNeT++\configuser_debug.vc -I../../simCore -I../../electronicComponents -I../../photonic.devices
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = dram

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../simCore -I../../electronicComponents -I../../photonic.devices

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=../../simCore/.tstamp \
            ../../electronicComponents/.tstamp \
            ../../photonic.devices/.tstamp

# Additional libraries (-L, -l, -t options)
LIBS=

#------------------------------------------------------------------------------


!include "D:\OMNeT++\configuser_debug.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(COPTS) $(NEDCFLAGS)
MSGCOPTS= $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= Aux_Stat.obj BIU.obj Command.obj DIMM.obj DRAM.obj DRAM_config.obj DRAM_Sim.obj DRAMaddress.obj Global_TQ_info.obj main.obj Memory_Controller.obj PendingQueue.obj PowerConfig.obj PrefetchCache.obj RBRR.obj RefreshQueue.obj Transaction.obj TransactionQueue.obj utilities.obj

# header files generated (from msg files)
GENERATEDHEADERS= 

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc  .tstamp

.tstamp: $(OBJS)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)

Aux_Stat.obj: Aux_Stat.cc
	$(CXX) -c $(COPTS) /Tp Aux_Stat.cc

BIU.obj: BIU.cc
	$(CXX) -c $(COPTS) /Tp BIU.cc

Command.obj: Command.cc
	$(CXX) -c $(COPTS) /Tp Command.cc

DIMM.obj: DIMM.cc
	$(CXX) -c $(COPTS) /Tp DIMM.cc

DRAM.obj: DRAM.cc
	$(CXX) -c $(COPTS) /Tp DRAM.cc

DRAM_config.obj: DRAM_config.cc
	$(CXX) -c $(COPTS) /Tp DRAM_config.cc

DRAM_Sim.obj: DRAM_Sim.cc
	$(CXX) -c $(COPTS) /Tp DRAM_Sim.cc

DRAMaddress.obj: DRAMaddress.cc
	$(CXX) -c $(COPTS) /Tp DRAMaddress.cc

Global_TQ_info.obj: Global_TQ_info.cc
	$(CXX) -c $(COPTS) /Tp Global_TQ_info.cc

main.obj: main.cc
	$(CXX) -c $(COPTS) /Tp main.cc

Memory_Controller.obj: Memory_Controller.cc
	$(CXX) -c $(COPTS) /Tp Memory_Controller.cc

PendingQueue.obj: PendingQueue.cc
	$(CXX) -c $(COPTS) /Tp PendingQueue.cc

PowerConfig.obj: PowerConfig.cc
	$(CXX) -c $(COPTS) /Tp PowerConfig.cc

PrefetchCache.obj: PrefetchCache.cc
	$(CXX) -c $(COPTS) /Tp PrefetchCache.cc

RBRR.obj: RBRR.cc
	$(CXX) -c $(COPTS) /Tp RBRR.cc

RefreshQueue.obj: RefreshQueue.cc
	$(CXX) -c $(COPTS) /Tp RefreshQueue.cc

Transaction.obj: Transaction.cc
	$(CXX) -c $(COPTS) /Tp Transaction.cc

TransactionQueue.obj: TransactionQueue.cc
	$(CXX) -c $(COPTS) /Tp TransactionQueue.cc

utilities.obj: utilities.cc
	$(CXX) -c $(COPTS) /Tp utilities.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && echo [opp_msgc in %%i] && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj .tstamp *.idb *.pdb *.ilk *.exp $(TARGET) $(TARGET:.exe=.lib) $(TARGET:.dll=.lib) 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && echo [clean in %%i] && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [depend in %%i] && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -n -c D:\OMNeT++\configuser_debug.vc -I../../simCore -I../../electronicComponents -I../../photonic.devices 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [makemake in %%i] && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.
Aux_Stat.obj: Aux_Stat.cc \
  Aux_Stat.h \
  constants.h \
  Command.h \
  DRAM_config.h \
  UpdateInterface.h \
  Global_TQ_info.h
BIU.obj: BIU.cc \
  BIU.h \
  DRAM_config.h \
  BIU_slot.h \
  constants.h \
  Aux_Stat.h \
  UpdateInterface.h \
  Global_TQ_info.h \
  Command.h \
  DRAMaddress.h
Command.obj: Command.cc \
  Command.h \
  constants.h
DIMM.obj: DIMM.cc \
  DIMM.h \
  DRAM_config.h \
  UpdateInterface.h \
  Global_TQ_info.h \
  Command.h \
  constants.h
DRAM.obj: DRAM.cc \
  DRAM.h \
  utilities.h \
  Memory_Controller.h \
  DRAM_config.h \
  PowerConfig.h \
  Aux_Stat.h \
  constants.h \
  BIU.h \
  TransactionQueue.h \
  Bus.h \
  DIMM.h \
  Rank.h \
  RBRR.h \
  PendingQueue.h \
  RefreshQueue.h \
  Command.h \
  DRAMaddress.h \
  Transaction.h \
  Global_TQ_info.h \
  Bank.h \
  PowerCounter.h \
  PendingInfo.h \
  UpdateInterface.h \
  PowerMeasure.h \
  BIU_slot.h
DRAM_config.obj: DRAM_config.cc \
  DRAM_config.h \
  TransactionQueue.h \
  UpdateInterface.h \
  Global_TQ_info.h \
  Command.h \
  constants.h \
  Transaction.h \
  DRAMaddress.h \
  BIU.h \
  Bank.h \
  BIU_slot.h \
  Aux_Stat.h
DRAM_Sim.obj: DRAM_Sim.cc \
  DRAM_Sim.h \
  Aux_Stat.h \
  BusEvent.h \
  constants.h \
  DRAM_config.h \
  Command.h \
  TransactionQueue.h \
  BIU.h \
  DRAM.h \
  DRAMaddress.h \
  UpdateInterface.h \
  Global_TQ_info.h \
  Transaction.h \
  Bank.h \
  BIU_slot.h \
  Memory_Controller.h \
  PowerConfig.h \
  Bus.h \
  DIMM.h \
  Rank.h \
  RBRR.h \
  PendingQueue.h \
  RefreshQueue.h \
  PowerCounter.h \
  PendingInfo.h \
  PowerMeasure.h
DRAMaddress.obj: DRAMaddress.cc \
  DRAMaddress.h \
  DRAM_config.h \
  UpdateInterface.h \
  Global_TQ_info.h \
  Command.h \
  constants.h
Global_TQ_info.obj: Global_TQ_info.cc \
  Global_TQ_info.h \
  Command.h \
  constants.h
main.obj: main.cc \
  constants.h \
  DRAM.h \
  DRAM_config.h \
  DRAM_Sim.h \
  TransactionQueue.h \
  Memory_Controller.h \
  PowerConfig.h \
  Aux_Stat.h \
  BIU.h \
  Bus.h \
  DIMM.h \
  Rank.h \
  RBRR.h \
  PendingQueue.h \
  RefreshQueue.h \
  Command.h \
  DRAMaddress.h \
  Bank.h \
  PowerCounter.h \
  PendingInfo.h \
  UpdateInterface.h \
  PowerMeasure.h \
  BIU_slot.h \
  Global_TQ_info.h \
  BusEvent.h \
  Transaction.h
Memory_Controller.obj: Memory_Controller.cc \
  Memory_Controller.h \
  constants.h \
  utilities.h \
  DRAM.h \
  TransactionQueue.h \
  Bus.h \
  DIMM.h \
  Rank.h \
  RBRR.h \
  PendingQueue.h \
  RefreshQueue.h \
  Command.h \
  DRAMaddress.h \
  Transaction.h \
  DRAM_config.h \
  Global_TQ_info.h \
  BIU.h \
  Bank.h \
  UpdateInterface.h \
  BIU_slot.h \
  Aux_Stat.h \
  PowerCounter.h \
  PendingInfo.h \
  PowerConfig.h \
  PowerMeasure.h
PendingQueue.obj: PendingQueue.cc \
  PendingQueue.h \
  PendingInfo.h \
  constants.h
PowerConfig.obj: PowerConfig.cc \
  PowerConfig.h \
  PowerCounter.h \
  Command.h \
  DRAM_config.h \
  UpdateInterface.h \
  PowerMeasure.h \
  Memory_Controller.h \
  constants.h \
  Global_TQ_info.h \
  TransactionQueue.h \
  Bus.h \
  DIMM.h \
  Rank.h \
  RBRR.h \
  PendingQueue.h \
  RefreshQueue.h \
  DRAMaddress.h \
  Transaction.h \
  BIU.h \
  Bank.h \
  BIU_slot.h \
  Aux_Stat.h \
  PendingInfo.h
PrefetchCache.obj: PrefetchCache.cc \
  PrefetchCache.h \
  constants.h
RBRR.obj: RBRR.cc \
  RBRR.h \
  constants.h
RefreshQueue.obj: RefreshQueue.cc \
  RefreshQueue.h \
  Command.h \
  constants.h
Transaction.obj: Transaction.cc \
  Transaction.h \
  constants.h \
  Command.h \
  DRAMaddress.h \
  DRAM_config.h \
  UpdateInterface.h \
  Global_TQ_info.h
TransactionQueue.obj: TransactionQueue.cc \
  TransactionQueue.h \
  Transaction.h \
  Command.h \
  DRAMaddress.h \
  DRAM_config.h \
  Global_TQ_info.h \
  BIU.h \
  Bank.h \
  constants.h \
  UpdateInterface.h \
  BIU_slot.h \
  Aux_Stat.h
utilities.obj: utilities.cc \
  utilities.h \
  Command.h \
  constants.h
