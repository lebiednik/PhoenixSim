[General]
# seed-0-mt=755472  # this is for random number generation
# performing different repetitions may be enough

debug-on-errors=true
cmdenv-interactive=true

include ../default/optical_realistic_parameters.ini
include ../default/default_parameters.ini
include ../default/eNetwork.ini

repeat = 1

#------- Layout
**.dieSize = ${D=400} #  mm^2

**.numOfNodesX = ${X=8}#,16,32}
**.numOfNodesY = ${X}
**.numOfNodesZ = 1

**.coreSizeX = 1000 * sqrt(${D}) / ${X}   #; um		note: core size must be > 1000um in each dimension (may change depending on component design sizes)
**.coreSizeY = 1000 * sqrt(${D}) / ${X}   #; um		used by Torus topology and Electronic Mesh
				#For XB: minimum size is XxY=565x755 based on original 4x4 switch design
				#For NBT: min size = 620x1034
**.coreDistanceZ = 2000 # um, virtical distance from any core to the chip package.


#------- Traffic
**.bcast_percent = ${bcast=100}


#------- Network
**.networkName = "E-Mesh"
**.electronicChannelWidth = ${W=128} # of wires out of each port
**.routerBufferSize = 4*4*${W} 

#--------------- Wireless
**.WmaxPacketSize = 1024
**.channelCapacity = ${C=128e9}
**.range = 0

#------------------------------------------------------------------------------------

[Config BcastE]
network = topologies.HybridWEMesh.HybridMeshNetworkCSMA
HybridMeshNetworkCSMA.prPlane.nic[*].hNIF_type = ${typeNET=1}

**.routerMaxGrants = 5
**.fraction = 0
**.range = 0

#**.application = "BcastImproved"
**.application = "CentralTG_synthetic"

**.appParam1 = ${lambda=0.005} * ${X} * ${X} # packets per cycle (global)#
**.appParam2 = ${numMessages=16*1024} #/(1+${bcast}*(${X}*${X}-1)/2000) # number of messages each node will inject before finishing // LA FORMULA ESTA FETA PER INTENTAR QUE NO S'ETERNITZIN LES SIMS
**.appParam3 = ${X}  # number of nodes per axis
**.appParam4 = 50 # percentage of short messages (1 flit); the rest will be long (5 flits)
**.appParam5 = ${dest="neigh"}
**.appParam6 = ${bcast} # percentage of broadcast transmissions
**.appParam7 = ${H=0.5} # Hurst Parameter
**.appParam8 = ${sigma=100} * ${X} * ${X} # sigma for hotspots
**.appParam9 = ${p=1.5} # p parameter for Rent's rule

**.STATS_warmup = 0.5/${lambda}/${freq}
**.STATS_cooldown = 0.5*${numMessages}/(${lambda}*${X}*${X})/${freq}

#**.logDirectory = "../../results/RMESH-BAL-LOWLAT-HIGHTHR/" + "${X}" + "x" + "${X}" + "/W is " + "${W}" + "/bcast is " + "${bcast}" + "/"
**.logDirectory = "../../results/" 
**.customInfo = "${typeNET}_" + ${dest} + "_p" + "${p}" + "_${lambda}" + "_${X}" + "x" + "${X}" + "_bcast" + "${bcast}" #+ "H_" + "${H}" + "sigma_" + "${sigma}" + "_rep" + "${repetition}"

#------------------------------------------------------------------------------------

[Config BcastE_FB]
network = topologies.HybridWEMesh.HybridMeshNetworkCSMA_FB
HybridMeshNetworkCSMA_FB.prPlane.nic[*].hNIF_type = ${typeNET=1}

**.routerMaxGrants = 2*${X}+2

#**.application = "BcastImproved"
**.application = "CentralTG_synthetic"

**.appParam1 = ${lambda=0.015,0.017,0.018}* ${X} * ${X} # packets per cycle (global)#
**.appParam2 = ${numMessages=64*1024} #/(1+${bcast}*(${X}*${X}-1)/2000) # number of messages each node will inject before finishing // LA FORMULA ESTA FETA PER INTENTAR QUE NO S'ETERNITZIN LES SIMS
**.appParam3 = ${X}  # number of nodes per axis
**.appParam4 = 50 # percentage of short messages (1 flit); the rest will be long (5 flits)
**.appParam6 = ${bcast} # percentage of broadcast transmissions
**.appParam7 = ${H=0.5} # Hurst Parameter
**.appParam8 = ${sigma=100} * ${X} * ${X} # sigma for hotspots

**.STATS_warmup = 0.5/${lambda}/${freq}
**.STATS_cooldown = 0.5*${numMessages}/(${lambda}*${X}*${X})/${freq}

#**.logDirectory = "../../results/RMESH-BAL-LOWLAT-HIGHTHR/" + "${X}" + "x" + "${X}" + "/W is " + "${W}" + "/bcast is " + "${bcast}" + "/"
**.logDirectory = "../../results/"
**.customInfo = "Bcast_" + "butterfly" + "_${lambda}" + "_${X}" + "x" + "${X}" + "H_" + "${H}" + "sigma_" + "${sigma}" + "_rep" + "${repetition}"

#------------------------------------------------------------------------------------

[Config BcastE_ParallelFC]
network = topologies.HybridWEMesh.HybridMeshNetworkCSMA_ParallelFlowControl
HybridMeshNetworkCSMA_ParallelFlowControl.prPlane.nic[*].hNIF_type = ${typeNET=1}

#**.application = "BcastImproved"
**.application = "CentralTG_synthetic"

**.appParam1 = ${lambda=0.01,0.025,0.02,0.032,0.034,0.03,0.1} * ${X} * ${X} # packets per cycle (global)
**.appParam2 = ${numMessages=8*1024} #/(1+${bcast}*(${X}*${X}-1)/2000) # number of messages each node will inject before finishing // LA FORMULA ESTA FETA PER INTENTAR QUE NO S'ETERNITZIN LES SIMS
**.appParam3 = ${X}  # number of nodes per axis
**.appParam4 = 100 # percentage of short messages (1 flit); the rest will be long (5 flits)
**.appParam6 = ${bcast} # percentage of broadcast transmissions
**.appParam7 = 0.5 # Hurst Parameter
**.appParam8 = 100 # sigma for hotspots

**.STATS_warmup = 0.5/${lambda}/${freq}
**.STATS_cooldown = 0.5*${numMessages}/(${lambda}*${X}*${X})/${freq}

**.logDirectory = "../../results/proves/parallelFC/"
#**.logDirectory = "../../results/RMESH-UNB-ULTRALOW/" + "${X}" + "x" + "${X}" + "/W is " + "${W}" + "/bcast is " + "${bcast}" + "/"

**.customInfo = "Bcast_parallel" + "${typeNET}" + "_${lambda}" + "_" + "bcast" + "${bcast}"# + "rep" + "${repetition}" 

